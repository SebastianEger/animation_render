OpenShadingLanguage 1.00
# Compiled by oslc 1.7.5
# options: -q -O2 -I/home/sebastian/blender-git/blender/intern/cycles/kernel/shaders -o /home/sebastian/blender-git/build_linux/intern/cycles/kernel/shaders/node_bevel.oso
shader node_bevel
param	int	samples	4		%read{2,2} %write{2147483647,-1} %derivs
param	float	Radius	0.050000001		%read{3,3} %write{2147483647,-1} %derivs
param	normal	NormalIn	0 0 0		%read{4,4} %write{0,0} %initexpr
oparam	normal	NormalOut	0 0 0		%read{4,4} %write{1,6} %initexpr
global	normal	N	%read{0,5} %write{2147483647,-1}
const	string	$const1	"@bevel"		%read{3,3} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{2,2} %derivs
temp	normal	$tmp2	%read{5,5} %write{4,4}
temp	normal	$tmp3	%read{6,6} %write{5,5}
code NormalIn
# /home/sebastian/blender-git/blender/intern/cycles/kernel/shaders/node_bevel.osl:22
# 	normal NormalIn = N,
	assign		NormalIn N 	%filename{"/home/sebastian/blender-git/blender/intern/cycles/kernel/shaders/node_bevel.osl"} %line{22} %argrw{"wr"}
code NormalOut
# /home/sebastian/blender-git/blender/intern/cycles/kernel/shaders/node_bevel.osl:23
# 	output normal NormalOut = N)
	assign		NormalOut N 	%filename{"/home/sebastian/blender-git/blender/intern/cycles/kernel/shaders/node_bevel.osl"} %line{23} %argrw{"wr"}
code ___main___
# /home/sebastian/blender-git/blender/intern/cycles/kernel/shaders/node_bevel.osl:26
# 	NormalOut = (normal)(color)texture("@bevel", samples, Radius);
	assign		$tmp1 samples 	%filename{"/home/sebastian/blender-git/blender/intern/cycles/kernel/shaders/node_bevel.osl"} %line{26} %argrw{"wr"}
	texture		NormalOut $const1 $tmp1 Radius 	%argrw{"wrrr"} %argderivs{2,3}
# /home/sebastian/blender-git/blender/intern/cycles/kernel/shaders/node_bevel.osl:29
# 	NormalOut = normalize(N + (NormalOut - NormalIn));
	sub		$tmp2 NormalOut NormalIn 	%line{29} %argrw{"wrr"}
	add		$tmp3 N $tmp2 	%argrw{"wrr"}
	normalize	NormalOut $tmp3 	%argrw{"wr"}
	end
